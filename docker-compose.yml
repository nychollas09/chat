version: "3"

services:
  db-mongo:
    image: mongo:4.4.4
    container_name: db-mongo
    restart: always
    volumes:
      - ./api-chat-nestjs/.docker/dbdata:/data/db
      - ./api-chat-nestjs/.docker/mongo:/docker-entrypoint-initdb.d
    networks:
      - chat
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=chat

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=db-mongo
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
    depends_on:
      - db-mongo
    networks:
      - chat

  api-chat-nestjs:
    build:
      context: api-chat-nestjs
    container_name: api-chat-nestjs
    entrypoint: dockerize -wait tcp://db-mongo:27017 -timeout 240s npm run start
    tty: true
    volumes:
      - ./api-chat-nestjs:/usr/chat/app/api
    networks:
      - chat
    depends_on:
      - db-mongo
    ports:
      - 3000:3000
    environment:
      - DB_URL=mongodb://root:root@db-mongo:27017/chat?authSource=admin
      - JWT_ACCESS_TOKEN_SECRET=access-chat-tallos
      - JWT_REFRESH_TOKEN_SECRET=refresh-chat-tallos
      - JWT_REFRESH_TOKEN_HTTPS_SECURE=false
      - ALLOWED_ORIGINS=http://ui-chat-vuejs:8080

  ui-chat-vuejs:
    build:
      context: ui-chat-vuejs
    container_name: ui-chat-vuejs
    entrypoint: npm run serve
    tty: true
    volumes:
      - ./ui-chat-vuejs:/usr/chat/app/ui
    networks:
      - chat
    depends_on:
      - api-chat-nestjs
    ports:
      - 8080:8080
    environment:
      - VUE_APP_API_URL=http://api-chat-nestjs:3000

networks:
  chat:
    driver: bridge
